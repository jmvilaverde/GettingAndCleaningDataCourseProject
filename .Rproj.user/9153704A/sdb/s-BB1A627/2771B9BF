{
    "contents" : "## CodeBook\n### Getting and Cleaning Data - Course Project\n\nVariables\n\n##Data Files\n\nZip file getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\n\nRelevant content unzipped:\n|\n|-activity_labels.txt\n|-features.txt\n|-/test/X_test.txt\n|-/test/Y_test.txt\n|-/test/subject_test.txt\n|-/train/X_train.txt\n|-/train/Y_train.txt\n|-/train/subject_train.txt\n\n###Initial Data Set\n\nget data from 3 files per each set:\n\nTest set:\n\nX_test.txt:             561 columns,    2947 rows,      no header\nY_test.txt:             1 column,       2947 rows,      no header\nsubject_test.txt:       1 column,       2947 rows,      no header\n\n\nTraining set: \n\nX_train.txt:            561 columns,    7352 rows,      no header\nY_train.txt:            1 column,       7352 rows,      no header\nsubject_train.txt:      1 column,       7352 rows,      no header\n\n###Other files:\n\nfeatures.txt:           2 columns,      561 rows,       no header\nactivity_labels.txt:    2 columns,      6 rows,         no header\n\n##Transformation\n###In order\n\nCall to function run_analysis\n\n1.Call to function adquireData()\n\n1.1.Download zip file from \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\n1.2.Unzip the file in work directory creates a directory: \"/UCI HAR Dataset\" with the structure \n\n|\n|-activity_labels.txt\n|-features.txt\n|-/test/X_test.txt\n|-/test/Y_test.txt\n|-/test/subject_test.txt\n|-/train/X_train.txt\n|-/train/Y_train.txt\n|-/train/subject_train.txt\n\n2.Call to function fileToData() -> Conversion from file to Data\n\n2.1. Call to function: getLabels() -> Get labels for X files and names for Activities\n\n\n\nPut content from file \"./UCI HAR Dataset/features.txt\" into data frame \"features\"\nRename \"features\"'s columns \"V1\" and \"V2\" to \"Id\" and \"Feature_Label\"\n\nPut content from file \"./UCI HAR Dataset/activity_labels.txt\" into data frame \"activity_labels\"\nRename \"activity_labels\"'s columns \"V1\" and \"V2\" to \"Id\" and \"Activity_Label\"\n        \n2. \n#Set path for test files, final part of the name and calls function getDataSet to extract\n        #data from the files\n        testPath <- paste(path,\"test/\", sep = \"/\")\n        extTest <- \"_test.txt\"\n        dataTest <- getDataSet(testPath, extTest)\n        \n        #Same operation with train files\n        trainPath <- paste(path,\"train/\", sep = \"/\")\n        extTrain <- \"_train.txt\"\n        dataTrain <- getDataSet(trainPath, extTrain)\n        \n        #Merge Test and Train data sets in only one data set\n        dataComplete <<- rbind(dataTest, dataTrain)\n        dataComplete\n \n \n        #Obtains Data set of averages per value grouped by Subject and Activity\n        dataAverage <- getDataSetAverage(dataComplete)\n        \n        #save set to a file\n        saveDataToFile(dataAverage)\n}\n\n\n\n#Obtains data from files, \n#sets the column names, \n#filter columns that only contains \"mean\" and \"std\",\n#merges activity Id with his activity name\n#merges together the three datasets = X + y + subject\n#return the complete data sets\n\ngetDataSet <- function(path, ext){\n        \n        #Read data from file X_????? \n        #use features global data frame to set col names \n        dataX <- read.table(paste(path,\"X\", ext, sep = \"\"), col.names = features$Feature_Label)\n        \n        #Read data from file y_????? \n        #set col name to Id_Activity\n        dataY <- read.table(paste(path,\"y\", ext, sep = \"\"), col.names = c(\"Id_Activity\"))\n        \n        #Read data from file subject_????? \n        #set col name to Subject\n        dataSub <- read.table(paste(path,\"subject\", ext, sep = \"\"), col.names = \"Subject\")\n        \n        #Obtain only data with \"mean\" or \"str\" contained into column label for dataX\n        #It's possible to quit \"meanFreq\", but I consider it as a \"mean\"\n        dataXOptimized <- dataX[,grepl(pattern=\"mean\", x = names(dataX))|grepl(pattern=\"std\", x = names(dataX))]\n        \n        #Complete data from Y with the name for activities\n        #Inner join between dataY and activity_labels to obtain the Activity names for each Id\n        dataYCompleted <<- merge(dataY, activity_labels, by.x=\"Id_Activity\", by.y=\"Id\")\n        \n        #Merge the three datasets\n        data <- cbind(dataXOptimized, dataYCompleted, dataSub)\n        \n        data\n}\n\n##Function to get average from each values group by value label, Subject and Activity\n\ngetDataSetAverage <- function(dataSet){\n        \n        #Obtains the mean for each column from 1 to 79 group by Subject and Activity_label\n        data <- aggregate(dataComplete[,1:79], list(dataComplete$Subject, dataComplete$Activity_Label), mean)\n        \n        #Rename columns Group.1 and Group.2 to Subject and Activity\n        data <- rename(data, Subject = Group.1, Activity = Group.2)\n        \n        #Order data by Subject and Activity\n        data <- arrange(data, Subject, Activity)\n        \n        data\n}\n\n##Function to save data to a file\n\nsaveDataToFile <- function(dataToSave){\n        #save table to file tidyData.txt\n        write.table(dataToSave, file=\"tidyData.txt\", row.name=FALSE)\n        datos <<- read.table(\"tidyData.txt\",header=TRUE)\n}",
    "created" : 1432120739622.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2673005830",
    "id" : "2771B9BF",
    "lastKnownWriteTime" : 1432148985,
    "path" : "D:/Privado/repos/3.GettingAndCleaningData/CourseProject/CodeBook.md",
    "project_path" : "CodeBook.md",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "markdown"
}